# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Integration checks

on:
  push:
    tags: "*"

  pull_request:
    branches: [ "master" ]

permissions:
  contents: write

jobs:
  show_info:
    runs-on: ubuntu-latest
    steps:
    - name: Show GitHub Context
      env: { CONTENT: "${{ toJson(github) }}" }
      run: "echo $CONTENT | jq"

  lint:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      name: Checkout repository

    - name: Install Poetry
      run: pipx install poetry

    - name: Set up Python 3.12
      uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        cache: "poetry"

    - name: Install Development dependencies
      run: poetry install --only=dev

    - name: Black linting
      run: poetry run black --check declasp

    - name: Ruff linting
      run: poetry run ruff check declasp

    - name: Typecheck
      run: poetry run mypy declasp

  build:
    runs-on: ubuntu-latest
    needs: lint
    steps:
    - uses: actions/checkout@v4
    - run: pipx install poetry
    - uses: actions/setup-python@v3
      with:
        python-version: "3.12"
        cache: "poetry"

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Upload artifact 
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Show contents of downloaded Artifacts
      run: ls dist/

    - name: Create Release
      run: gh release create ${{ github.ref_name }} dist/*.tar.gz --notes ""
      env:
        GH_TOKEN: ${{ github.token }}
     
